name: Translate and Build Package

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'With TMATE'
        required: false
        default: false

  push:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: If Template exit
        shell: bash
        run: |
          cancel () {
            echo "Pacote de template, nÃ£o precisa traduzir e compilar"
            echo "SAINDO...."
            curl -s -H "Authorization: token ${{ github.token }}" \
            -X POST "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/cancel"
            sleep infinity
          }
          if [ -n "$(grep biglinux-package-template pkgbuild/PKGBUILD)" ];then
            cancel
          fi

      - name: Install Translator Dependencies
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install \
          git \
          gettext \
          npm
          # Install attranslator
          sudo npm install --location=global attranslate

      ## Tmate ##
      - name: Setup TMATE Session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}

      - name: Translate Package
        shell: bash #-O extglob {0}
        env:
          AZURE_KEY: ${{ secrets.AZURE_KEY }}
          OPENAI_KEY: ${{ secrets.OPENAI_KEY }}
        run: |
          cd ..
          git clone https://github.com/biglinux/big-auto-translator.git
          mv big-auto-translator/gettext_po_generator_github.sh .
          sudo cp -f big-auto-translator/openai-translate.js /usr/local/lib/node_modules/attranslate/dist/services/openai-translate.js
          gitfolder=$(echo ${{ github.repository }} | rev | cut -d "/" -f1 | rev)
          # export OriginalLang=en-US
          bash gettext_po_generator_github.sh $gitfolder

      - name: Update github
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add --all
          if [ -n "$(git commit -m "translate $(date +%y-%m-%d_%H:%M)" -a | grep "nothing to commit")" ];then exit 0; fi

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Get branch name
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

          if [[ "$BRANCH_NAME" == *"stable"* ]] || [[ "$BRANCH_NAME" == *"testing"* ]]; then
            echo "CREATE_RELEASE=true" >> $GITHUB_ENV
          else
            echo "CREATE_RELEASE=false" >> $GITHUB_ENV
          fi

      - name: Set package info
        run: |
          gitfolder=$(find -type f -name PKGBUILD | sed 's/PKGBUILD//')
          cd $gitfolder
          PKG_NAME=$(grep "^pkgname=" PKGBUILD | cut -d'=' -f2)
          PKG_DESC=$(grep "^pkgdesc=" PKGBUILD | cut -d'"' -f2)
          PKG_VERSION=$(date +%y.%m.%d)
          PKG_RELEASE=$(date +%H%M)
          MAINTAINER=$(grep "^# Maintainer:" PKGBUILD | sed 's/# Maintainer: //' | cut -d'<' -f1 | xargs)

          echo "PKG_NAME=$PKG_NAME" >> $GITHUB_ENV
          echo "PKG_DESC=$PKG_DESC" >> $GITHUB_ENV
          echo "MAINTAINER=$MAINTAINER" >> $GITHUB_ENV
          echo "VERSION=${PKG_VERSION}-${PKG_RELEASE}" >> $GITHUB_ENV

      - name: Create package structure
        run: |
          mkdir -p package_root

          if [ -d "usr" ]; then
            cp -r usr package_root/
          fi

          if [ -d "etc" ]; then
            cp -r etc package_root/
          fi

          if [ -d "opt" ]; then
            cp -r opt package_root/
          fi

          find package_root -type f -exec chmod 644 {} \;
          find package_root -type d -exec chmod 755 {} \;
          find package_root -name "*.sh" -exec chmod +x {} \; 2>/dev/null || true
          find package_root/usr/bin -type f -exec chmod +x {} \; 2>/dev/null || true

      - name: Build DEB package
        uses: jiro4989/build-deb-action@v3
        with:
          package: ${{ env.PKG_NAME }}
          package_root: package_root
          maintainer: ${{ env.MAINTAINER }}
          version: ${{ env.VERSION }}
          arch: 'all'
          desc: ${{ env.PKG_DESC }}
          depends: 'python3, python3-gi, gir1.2-adw-1, gir1.2-gtk-4.0, polkitd, zenity, gzip, power-profiles-daemon'
          homepage: 'https://github.com/biglinux/${{ env.PKG_NAME }}'

      - name: Create Release
        if: env.CREATE_RELEASE == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          files: '*.deb'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
